{"version":3,"sources":["components/Auth.js","components/Login.js","components/Prediction.js","components/Header.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["setToken","token","localStorage","setItem","Login","navigate","useNavigate","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","_useState5","_useState6","password","setPassword","react","createElement","className","type","id","placeholder","onChange","e","target","value","onClick","axios","post","then","response","console","log","data","catch","error","Prediction","cropDrainedCarbonKtns","setDrainedCarbon","cropDrainedNitrogenKtns","setDrainedNitrogen","potashKgha","setPotassium","_useState7","_useState8","nitrogenKgha","setNitrogen","_useState9","_useState10","phosphateKgha","setPhosphorus","_useState11","_useState12","manureNormalSoilKg","setManure","_useState13","_useState14","avgRainMm","setRain","_useState15","_useState16","avgTempC","setTemp","_useState17","_useState18","nitrogenEmissionsKtns","setNitrogenEmission","_useState19","_useState20","carbonEmissionsKtns","setCarbonEmissions","_useState21","_useState22","methaneEmissionsKtns","setMethaneEmissions","_useState23","_useState24","pesticidesKgha","setPesticides","_useState25","_useState26","userOutput","setUserOutput","reset","react_default","a","onSubmit","preventDefault","params","res","msg","concat","prediction","alert","message","handleSubmit","required","autoFocus","min","max","pattern","title","step","optional","Header","_ref","style","backgroundImage","height","defaultProps","email","setEmail","password1","setPassword1","password2","setPassword2","App","components_Header","dist","react_router_dist","path","element","Register_Login","components_Prediction","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4fc7cc4d.chunk.js","sourcesContent":["import { useLocation,Navigate } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const setToken = (token)=>{\n\n    localStorage.setItem('stevedavies', token)// make up your own token\n}\n\nexport const fetchToken = (token)=>{\n\n    return localStorage.getItem('stevedavies')\n}\n\nexport function RequireToken({children}){\n\n    let auth = fetchToken()\n    let location = useLocation()\n\n    if(!auth){\n\n        return <Navigate to='/' state ={{from : location}}/>;\n    }\n\n    return children;\n}","import { useNavigate } from \"react-router\";\nimport { fetchToken, setToken } from \"./Auth\";\nimport { useState, React } from \"react\";\nimport axios from \"axios\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //check to see if the fields are not empty\n  const login = () => {\n    if ((username === \"\") & (password === \"\")) {\n      return;\n    } else {\n      // make api call to our backend. we'll leave thisfor later\n      axios\n        .post(\"http://localhost:8080/login\", {\n          username: username,\n          password: password,\n        })\n        .then(function (response) {\n          console.log(response.data.token, \"response.data.token\");\n          if (response.data.token) {\n            setToken(response.data.token);\n            navigate(\"/home\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error, \"error\");\n        });\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div>\n          <div>\n            <form>\n            <h1 className=\"form-title\">Login</h1>\n            <div className=\"form-control\">\n                <input \n                    type=\"email\" \n                    id=\"loginName\" \n                    className=\"form-control input\"\n                    placeholder=\"Email or Username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n            \n            <div className=\"form-control\">\n                <input \n                    type=\"password\" \n                    id=\"setPasswprd\" \n                    className=\"form-control input\"\n                    placeholder=\"Enter Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n\n              <button type=\"button\" className=\"btn\" onClick={login}>\n                Login\n              </button>\n            </form>\n          </div>\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport './prediction.css'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nfunction Prediction() {\n    // define the hooks for controlled input fields for prediction\n    const [cropDrainedCarbonKtns, setDrainedCarbon] = useState('')\n    const [cropDrainedNitrogenKtns, setDrainedNitrogen] = useState('')\n    const [potashKgha, setPotassium] = useState('')\n    const [nitrogenKgha, setNitrogen] = useState('')\n    const [phosphateKgha, setPhosphorus] = useState('')\n    const [manureNormalSoilKg, setManure] = useState('')\n    const [avgRainMm, setRain] = useState('')\n    const [avgTempC, setTemp] = useState('')\n    const [nitrogenEmissionsKtns, setNitrogenEmission] = useState('264.7563')//default value is set to be national 2020 value\n    const [carbonEmissionsKtns, setCarbonEmissions] = useState('3678.1397')//default value is set to be national 2020 value\n    const [methaneEmissionsKtns, setMethaneEmissions] = useState('4449.9555')//default value is set to be national 2020 value for optional inpute\n    const [pesticidesKgha, setPesticides] = useState('')\n\n    // hook to store the user message and predicted output\n    const [userOutput, setUserOutput] = useState('')\n  \n    const handleSubmit = (e) => {\n      e.preventDefault()\n      const params = { \n        avgRainMm,avgTempC,carbonEmissionsKtns,cropDrainedCarbonKtns,cropDrainedNitrogenKtns,\n        manureNormalSoilKg,methaneEmissionsKtns,nitrogenEmissionsKtns,nitrogenKgha,pesticidesKgha,phosphateKgha,potashKgha\n      }\n      axios\n        .post('http://localhost:8080/prediction', params)\n        .then((res) => {\n          const data = res.data.data\n          const msg = `Total Predicted Yield of Bean is ${data.prediction} Hectograms per Hectare`\n          setUserOutput(msg)\n          reset()\n        })\n        .catch((error) => alert(`Error: ${error.message}`))\n    }\n  \n    const reset = () => {\n      setDrainedCarbon('')\n      setDrainedNitrogen('')\n      setPotassium('')\n      setNitrogen('')\n      setPhosphorus('')\n      setNitrogenEmission('')\n      setManure('')\n      setRain('')\n      setTemp('')\n      setCarbonEmissions('')\n      setMethaneEmissions('')\n      setPesticides('')\n    }\n  return (\n    <div className=\"glass\">\n      <div className=\"glass__inputs\">\n      <form onSubmit={(e) => handleSubmit(e)} className=\"glass__form\">\n        <h3>Crop Conditions</h3>\n        <div className=\"glass__form__group\">\n          <input\n            id=\"cropDrainedCarbonKtns\"\n            className=\"glass__form__input\"\n            placeholder=\"Drained Soil CO2 (65.0 - 80.0)\"\n            required\n            autoFocus\n            min=\"65\"\n            max=\"80\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Drained Soil CO2 emissions between (65.0 - 80.0)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={cropDrainedCarbonKtns}\n            onChange={(e) => setDrainedCarbon(e.target.value)}\n          />\n        </div>\n        <div className=\"glass__form__group\">\n          <input\n            id=\"cropDrainedNitrogenKtns\"\n            className=\"glass__form__input\"\n            placeholder=\"Drained Soil N20 (0.0250 - 0.0350)\"\n            required\n            autoFocus\n            min=\"0.0250\"\n            max=\"0.0350\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Drained Soil N20 emissions between (0.0250 - 0.0350)\"\n            type=\"number\"\n            step=\"0.0001\"\n            value={cropDrainedNitrogenKtns}\n            onChange={(e) => setDrainedNitrogen(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <input\n            id=\"potashKgha\"\n            className=\"glass__form__input\"\n            placeholder=\"Potassium Fertlizer in kg/ha (0 - 30)\"\n            required\n            autoFocus\n            min=\"0\"\n            max=\"30\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Potassium Fertlizer in kg/ha (0 - 30)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={potashKgha}\n            onChange={(e) => setPotassium(e.target.value)}\n          />\n        </div>\n\n\n        <div className=\"glass__form__group\">\n          <input\n            id=\"nitrogenKgha\"\n            className=\"glass__form__input\"\n            placeholder=\"Nitrogen Fertlizer in kg/ha (0 - 30)\"\n            required\n            autoFocus\n            min=\"0\"\n            max=\"30\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Nitrogen Fertlizer in kg/ha (0 - 30)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={nitrogenKgha}\n            onChange={(e) => setNitrogen(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"glass__form__group\">\n          <input\n            id=\"phosphateKgha\"\n            className=\"glass__form__input\"\n            placeholder=\"phosphorus Fertlizer in kg/ha (0 - 30)\"\n            required\n            autoFocus\n            min=\"0\"\n            max=\"30\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"phosphorus Fertlizer in kg/ha (0 - 30)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={phosphateKgha}\n            onChange={(e) => setPhosphorus(e.target.value)}\n          />\n        </div>\n\n        \n        <div className=\"glass__form__group\">\n          <input\n            id=\"manureNormalSoilKg\"\n            className=\"glass__form__input\"\n            placeholder=\"manure Average in kg (100000 - 1000000)\"\n            optional\n            autoFocus\n            min=\"100000\"\n            max=\"10000000\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"manure Average in kg (100000 - 1000000)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={manureNormalSoilKg}\n            onChange={(e) => setManure(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <input\n            id=\"avgRainMm\"\n            className=\"glass__form__input\"\n            placeholder=\"rain annual average in mm (200 - 1500)\"\n            required\n            autoFocus\n            min=\"200\"\n            max=\"1500\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"rain annual average in mm (200 - 1500)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={avgRainMm}\n            onChange={(e) => setRain(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <input\n            id=\"avgTempC\"\n            className=\"glass__form__input\"\n            placeholder=\"temp annual avg C (15 - 35)\"\n            required\n            autoFocus\n            min=\"15\"\n            max=\"35\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"temp annual avg C (15 - 35)\"\n            type=\"number\"\n            step=\"0.01\"\n            value={avgTempC}\n            onChange={(e) => setTemp(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <input\n            id=\"pesticidesKgha\"\n            className=\"glass__form__input\"\n            placeholder=\"pesticides Totals in kgha per croparea (0.15 - 2.00)\"\n            required\n            autoFocus\n            min=\"0.15\"\n            max=\"2.00\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"pesticides Totals in kgha per croparea (0.15 - 2.00))\"\n            type=\"number\"\n            step=\"0.01\"\n            value={pesticidesKgha}\n            onChange={(e) => setPesticides(e.target.value)}\n          />\n        </div>\n        <div>\n          <h4>{\"Optional Fields if Known, Else Leave the Default Values\"}</h4>\n        </div>\n        <div className=\"glass__form__group\">\n          <p>Total Nitrogen Emissions in kt (100 - 300)</p>\n          <input\n            id=\"nitrogenEmissionsKtns\"\n            className=\"glass__form__input\"\n            placeholder=\"Nitrogen Emissions Totals in kt (100 - 300)\"\n            optional\n            autoFocus\n            min=\"100\"\n            max=\"300\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Nitrogen Emissions Totals in kt (100 - 300)\"\n            type=\"number\"\n            step=\"0.0001\"\n            value={nitrogenEmissionsKtns}\n            onChange={(e) => setNitrogenEmission(e.target.value)}\n          />\n        </div>\n        <div className=\"glass__form__group\">\n        <p>Total Methane Emissions in kt (1500 - 5000)</p>\n          <input\n            id=\"methaneEmissionsKtns\"\n            className=\"glass__form__input\"\n            placeholder=\"Methane Emissions Totals in kt (1500 - 5000)\"\n            optional\n            autoFocus\n            min=\"1500\"\n            max=\"5000\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"Methane Emissions Totals in kt (1500 - 5000)\"\n            type=\"number\"\n            step=\"0.0001\"\n            value={methaneEmissionsKtns}\n            onChange={(e) => setMethaneEmissions(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <p>Total Carbon Emissions in kt (1500 - 50000)</p>\n          <input\n            id=\"carbonEmissionsKtns\"\n            className=\"glass__form__input\"\n            placeholder=\"carbon Emissions Totals in kt (1500 - 50000)\"\n            optional\n            autoFocus\n            min=\"1500\"\n            max=\"50000\"\n            pattern=\"[0-9]+([\\.,][0-9]+)?\"\n            title=\"carbon Emissions Totals in kt (1500 - 50000)\"\n            type=\"number\"\n            step=\"0.0001\"\n            value={carbonEmissionsKtns}\n            onChange={(e) => setCarbonEmissions(e.target.value)}\n          />\n        </div>\n\n        <div className=\"glass__form__group\">\n          <button type=\"submit\" className=\"glass__form__btn\">\n            Submit\n          </button>\n        </div>\n      </form> \n      </div>\n      <div className='glass__output'>\n        <h3>{\"Prediction\"}</h3>\n        <p>{userOutput}</p>\n      </div>\n  </div>\n  \n  )\n}\n\nexport default Prediction;","import React from 'react'\n\nconst Header = ({ title }) => {\n    return (\n      <header className='header'\n      style={{ backgroundImage: \"url('https://mdbootstrap.com/img/new/slides/041.webp')\", height: '100px' }}\n      >\n        <h1>{title}</h1>\n      </header>\n    )\n  }\n  \n  Header.defaultProps = {\n    title: 'Crop Decision Hub',\n  }\n\nexport default Header","import { useNavigate } from \"react-router\";\nimport { fetchToken, setToken } from \"./Auth\";\nimport { useState, React } from \"react\";\nimport axios from \"axios\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  //check to see if the fields are not empty\n  const register = () => {\n    if ((username === \"\") & (password1 === \"\") & (email===\"\")) {\n      return;\n    } else if (password1 !== password2){\n        alert(\"passwords do not match\")\n    } else {\n      // make api call to our backend. we'll leave thisfor later\n      axios\n        .post(\"http://localhost:8080/register\", {\n          username: username,\n          email: email,\n          password1: password1,\n        //   password2: password2\n        })\n        .then(function (response) {\n        //   console.log(response.data.token, \"response.data.token\");\n            navigate(\"/login\");\n        })\n        .catch(function (error) {\n          console.log(error, \"error\");\n        });\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div>\n          <div>\n            <form>\n            <h1 className=\"form-title\">Sign Up</h1>\n            <div className=\"form-control\">\n                <input \n                    type=\"name\" \n                    id=\"registerName\" \n                    className=\"form-control input\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n\n            <div className=\"form-control\">\n                <input \n                    type=\"email\" \n                    id=\"registerName\" \n                    className=\"form-control input\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n            \n            <div className=\"form-control\">\n                <input \n                    type=\"password\" \n                    id=\"setPassword\" \n                    className=\"form-control input\"\n                    placeholder=\"Enter Password\"\n                    onChange={(e) => setPassword1(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n\n            <div className=\"form-control\">\n                <input \n                    type=\"password\" \n                    id=\"setPassword\" \n                    className=\"form-control input\"\n                    placeholder=\"Enter Password\"\n                    onChange={(e) => setPassword2(e.target.value)}\n                    />\n                {/* <label class=\"form-label\" for=\"loginName\">Email or username</label> */}\n            </div>\n\n              <button type=\"button\" className=\"btn\" onClick={register}>\n                Create Acount\n              </button>\n            </form>\n          </div>\n      </div>\n    </div>\n  );\n}","import './App.css';\nimport React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from \"./components/Login\";\nimport Prediction from './components/Prediction';\nimport Header from './components/Header';\nimport Register from \"./components/Register\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    <Router>\n      <Routes>\n        <Route path=\"/login/\" element = {<Login/>}/>\n        <Route path=\"/register/\" element = {<Register/>}/>\n        <Route path=\"/home/\" element = {<Prediction/>}/>\n      </Routes>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {createRoot} from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// updated way of rendering root\nconst root = createRoot(document.getElementById(\"root\"))\nroot.render(<React.StrictMode><App/></React.StrictMode>)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}